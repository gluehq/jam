
//  V A R I A B L E S

// Maximum span width: 12 or 14 recommended. High values drastically increase output file size
$span-max: 18;

// Minimum span width: 2 or more recommended if $span-max is greater than 8
$span-min: 2;

// List of acceptable column amounts in a span
$cols: 2 3 4 6;

// Collapsing group size: how decreasing span widths are grouped together on mobile
$span-collapse: 2;

// Media queries including key combined ranges
$all-media: large, standard, tablet, plus, phone, phone-plus;
$single-media: large, standard, tablet, plus, phone;

$ygap-ph:   24px;
$ygap-pl:   28px;
$ygap-tb:   32px;
$ygap-st:   36px;
$ygap-lg:   40px;

$xgap-ph:   20px;
$xgap-pl:   24px;
$xgap-tb:   28px;
$xgap-st:   40px;
$xgap-lg:   44px;

$plus:      411px;      // Pixel 2 portrait
$tablet:    768px;      // iPad 10" portrait
$standard:  1025px;     // iPad 10" landscape, 13" portrait + 1px
$large:     1367px;     // Common 13" laptop size + 1px

$grey-5:    #f5f5f5;  // 5%
$grey-10:   #ececec;  // 10%
$grey-20:   #cdcdcd;  // 20%
$grey-30:   #c2c2c2;  // 30%
$grey-40:   #acacac;  // 40%
$grey-50:   #959595;  // 50%
$grey-60:   #696969;  // 60%
$grey-70:   #636363;  // 70%
$grey-80:   #484848;  // 80%


//  M E D I A   Q U E R I E S

@mixin media($media) {
    
    //  Individual ranges

    @if $media == phone {
        @media (max-width: $plus - 1px) { @content; }
    }

    @if $media == plus {
        @media (min-width: $plus) and (max-width: $tablet - 1px) { @content; }
    }

    @if $media == tablet {
        @media (min-width: $tablet) and (max-width: $standard - 1px) { @content; }
    }

    @if $media == standard {
        @media (min-width: $standard) and (max-width: $large - 1px) { @content; }
    }

    @if $media == large {
        @media (min-width: $large) { @content; }
    }

    //  Combined ranges

    @if $media == phone-plus {
        @media (max-width: $tablet - 1px) { @content; }
    }

    @if $media == phone-tablet {
        @media (max-width: $standard - 1px) { @content; }
    }

    @if $media == phone-standard {
        @media (max-width: $large - 1px) { @content; }
    }

    @if $media == plus-tablet {
        @media (min-width: $plus) and (max-width: $standard - 1px) { @content; }
    }

    @if $media == plus-standard {
        @media (min-width: $plus) and (max-width: $large - 1px) { @content; }
    }

    @if $media == plus-large {
        @media (min-width: $plus) { @content; }
    }

    @if $media == tablet-standard {
        @media (min-width: $tablet) and (max-width: $large - 1px) { @content; }
    }

    @if $media == tablet-large {
        @media (min-width: $tablet) { @content; }
    }
    
    @if $media == standard-large {
        @media (min-width: $standard) { @content; }
    }

}


//  F U N C T I O N S

//  responsive fixed-width gaps between columns

@function xgap($media, $modifier) {
        
    $xgap: '';
    
    @if $media == phone {
        $xgap: $xgap-ph;
    }   

    @if $media == plus {
        $xgap: $xgap-pl;
    }

    @if $media == tablet {
        $xgap: $xgap-tb;
    }

    @if $media == standard {
        $xgap: $xgap-st;
    }

    @if $media == large {
        $xgap: $xgap-lg;
    }

    @if $modifier != null {
        $xgap: $xgap * $modifier;
    }
    
    @return $xgap;
    
}

@function ygap($media, $modifier) {
        
    $ygap: '';
    
    @if $media == phone {
        $ygap: $ygap-ph;
    }   

    @if $media == plus {
        $ygap: $ygap-pl;
    }

    @if $media == tablet {
        $ygap: $ygap-tb;
    }

    @if $media == standard {
        $ygap: $ygap-st;
    }

    @if $media == large {
        $ygap: $ygap-lg;
    }

    @if $modifier != null {
        $ygap: $ygap * $modifier;
    }
    
    @return $ygap;
    
}


// Return span units
@function unit($cols, $media, $modifier) {
    $unit: calc(#{percentage(1/$cols) * $modifier});
    @return $unit;
}
